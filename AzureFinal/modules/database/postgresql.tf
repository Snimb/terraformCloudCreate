## Provisions an Azure PostgreSQL Flexible Server with specified configurations like version, storage, and admin credentials.
resource "azurerm_postgresql_flexible_server" "psql" {
  ## Defines the name of the PostgreSQL Flexible Server instance.
  name = lower("${var.psql_prefix}-${random_pet.name_prefix.id}-${var.psql_name}-${local.environment}")

  ## Specifies the name of the resource group where the PostgreSQL server will be located.
  resource_group_name = azurerm_resource_group.db.name

  ## The Azure region where the PostgreSQL server will be deployed.
  location = azurerm_resource_group.db.location

  ## The version of PostgreSQL to be deployed on the server.
  version = var.psql_version

  ## The ID of the delegated subnet within a virtual network where the PostgreSQL server will be connected, ensuring network isolation.
  delegated_subnet_id = azurerm_subnet.psql.id

  ## Associates the server with a private DNS zone for resolving the server's hostname within the virtual network.
  private_dns_zone_id = azurerm_private_dns_zone.psql.id

  ## The administrator username for the PostgreSQL server.
  administrator_login = var.psql_admin_login

  ## The password for the PostgreSQL server administrator, generated by a `random_password` resource for security.
  administrator_password = random_password.psql_admin_password.result

  ## The availability zone where the server will be placed. Use "1", "2", or "3" for specific zones, or leave empty for no specific zone.
  zone = var.zone

  ## The amount of storage allocated for the server in megabytes.
  storage_mb = var.psql_storage_mb

  # storage_tier = "default"

  ## Specifies the SKU name for the server, determining the pricing tier and performance characteristics.
  sku_name = var.psql_sku_name

  ## The number of days backups are retained. Azure allows a minimum of 7 and a maximum of 35 days for backup retention.
  backup_retention_days = var.backup_retention_days

  ## Determines whether geo-redundant backups are enabled, providing additional data resiliency by storing backups in a secondary region.
  geo_redundant_backup_enabled = var.geo_redundant_backup_enabled

  ## Specifies whether the server's storage should automatically grow as needed, preventing out-of-space errors.
  auto_grow_enabled = var.auto_grow_enabled

  authentication {
    active_directory_auth_enabled = true
    password_auth_enabled         = true
    tenant_id                     = data.azurerm_client_config.current.tenant_id
  }

  ## when you prefer maintenance to occur. Azure uses this information to schedule maintenance operations, such as updates and patches, minimizing impact on your service.
  maintenance_window {
    day_of_week  = var.maintenance_window.day_of_week
    start_hour   = var.maintenance_window.start_hour
    start_minute = var.maintenance_window.start_minute
  }

  ## Configures the high availability (HA) settings for the PostgreSQL server to enhance fault tolerance and ensure service continuity.
  /*high_availability {
    ## 'mode' determines the type of high availability configuration. 
    ## "ZoneRedundant" places the standby server in a different availability zone from the primary server for increased resilience against zone failures.
    ## "SameZone" places the standby server in the same availability zone as the primary server, which may offer lower latency during failover but doesn't protect against zone-wide issues.
    mode                      = var.high_availability_mode ## "ZoneRedundant" Or "SameZone" for single-zone high availability
    standby_availability_zone = var.standby_availability_zone
  }
*/

  depends_on = [azurerm_private_dns_zone_virtual_network_link.psql]
}

# generate random password for postgreSQL admin password
resource "random_password" "psql_admin_password" {
  length           = 20
  special          = true
  lower            = true
  upper            = true
  override_special = "!#$" //"!#$%&*()-_=+[]{}<>:?"
}

resource "azurerm_postgresql_flexible_server_database" "psqldb" {
  for_each  = { for name in var.database_names : name => name }
  name      = each.key                                   ## The name of the database, prefixed with the generated name to ensure uniqueness.
  server_id = azurerm_postgresql_flexible_server.psql.id ## Links the database to the created PostgreSQL server.
  collation = "en_US.utf8"                               ## Sets the database collation.
  charset   = "UTF8"                                     ## Sets the database character set.
  depends_on = [
    azurerm_postgresql_flexible_server.psql
  ]
  ## prevent the possibility of accidental data loss
  /*lifecycle {
    prevent_destroy = true
  }*/
}

## Create azure ad group for PostgreSQL admin users
resource "azuread_group" "psql_admin_group" {
  display_name     = "psql-admin-group"
  security_enabled = true
}

## Create Azure AD groups for database access
resource "azuread_group" "psql_ad_group" {
  for_each         = toset(["readonly", "readwrite", "administrators"])
  display_name     = lower("${azurerm_postgresql_flexible_server.psql.name}-${each.key}-${local.environment}")
  security_enabled = true
  owners           = [data.azurerm_client_config.current.object_id]

  /*lifecycle {
    ignore_changes = [owners]
  }*/
}

## Set the AD administrator for PostgreSQL Flexible Server
resource "azurerm_postgresql_flexible_server_active_directory_administrator" "psql" {
  server_name         = azurerm_postgresql_flexible_server.psql.name
  resource_group_name = azurerm_resource_group.db.name
  tenant_id           = data.azurerm_client_config.current.tenant_id
  object_id           = azuread_group.psql_admin_group.object_id
  principal_name      = azuread_group.psql_admin_group.display_name
  principal_type      = "Group"
}

resource "azurerm_postgresql_firewall_rule" "AllowAllWindowsAzureIps" {
  name                = "AllowAllWindowsAzureIps"
  resource_group_name = azurerm_postgresql_server.example.resource_group_name
  server_name         = azurerm_postgresql_server.example.name
  start_ip_address    = "0.0.0.0"
  end_ip_address      = "0.0.0.0"  # Only use this if you want to allow access from Azure services
}
